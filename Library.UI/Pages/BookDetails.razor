@page "/book/{id:guid}"
@using Library.Shared
@using Library.UI.Services
@using Library.UI.Components
@inject IBookService BookService
@inject NavigationManager NavigationManager

<h3>Details Of The Book</h3>

@if (Book is null)
{
    <p>Loading..</p>
}
else
{
    <BookForm Book="Book" OnValidSubmit="UpdateAsync" ButtonText="Update"/>
    <button class="btn btn-warning" @onclick="DeleteAsync" style="margin-top: 5px">Delete</button>
}

@code {

    [Parameter]
    public Guid Id { get; set; }

    private Book? Book { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Book = await BookService.GetBookAsync(Id);
    }

    private async Task DeleteAsync()
    {
        await BookService.DeleteBookAsync(Id);
        NavigationManager.NavigateTo("/book/list");
    }

    private async Task UpdateAsync()
    {
        await BookService.UpdateBookAsync(Id, Book);
        NavigationManager.NavigateTo("/book/list");
    }
}


